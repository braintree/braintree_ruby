== 2.30.1
* Ensure that TR Data is encoded correctly

== 2.30.1
* Make webhook parsing more robust with newlines
* Add messages to InvalidSignature exceptions

== 2.30.0
* Include Dispute information on Transaction
* Search for Transactions disputed on a certain date

== 2.29.0
* Disbursement Webhooks
* Use OpenSSL::Digest instead of OpenSSL::Digest::Digest (Thanks Scott Rocher, scottrocher@gmail.com)

== 2.28.0
* Merchant account find API

== 2.27.0
* Merchant account update API
* Merchant account create API v2

== 2.26.0
* Official support for Partnerships
* Changed visibility of methods used in multi-tenancy

== 2.25.0
* Adds hold_in_escrow and hold_in_escrow! methods
* Add error codes for verification not supported error
* Add company_name and tax_id to merchant account create
* Updates webhook notification to provide errors and merchant account at the top level
* Adds cancel_release and cancel_release! methods
* Refactors transaction_gateway
* Adds release_from_escrow!
* Adds release_from_escrow functionality
* Adds owner_phone to merchant account signature.
* Adds merchant account phone error code.

== 2.24.0
* Adds device data to transactions, customers, and credit cards.

== 2.23.0
* Adds disbursement details to transactions.
* Adds image_url to transactions.

== 2.22.0
* Adds channel field to transactions.

== 2.21.0
* Add card type indicators to transactions and verifications

== 2.20.0
* Add additional card types for card type indicators
* Added ability to allow TR query parameters with no value (thanks @dmathieu!)

== 2.19.0
* Adds verification search

== 2.18.0
* Additional card information, such as prepaid, debit, commercial, Durbin regulated, healthcare, and payroll, are returned on credit card responses
* Allows transactions to be specified as recurring

== 2.17.0
* Adds prepaid attribute to credit cards (possible values: Yes, No, Unknown)

== 2.16.0

* Adds webhook gateways for parsing, verifying, and testing incoming
notifications
* Adds Transaction.refund!(id, amount = nil)

== 2.15.0

* Adds unique_number_identifier attribute to CreditCard

== 2.14.0

* Adds search for duplicate credit cards given a payment method token
* Adds flag to fail saving credit card to vault if card is duplicate

== 2.13.4

* Allows both url encoded and decoded query string and hash

== 2.13.3

* Exposes plan_id on transactions
* Fixes GitHub issue #19 - Unescapes escaped characters in query string

== 2.13.2

* Added error code for invalid purchase order number
* Changes transparent redirect query string regexp to allow hash to appear
anywhere in params string

== 2.13.1

* Made the production endpoint configurable

== 2.13.0

* Added new error code for merchant accounts that do not support refunds
* Added GEMSPEC file

== 2.12.0

* Added ability to retrieve all Plans, AddOns and Discounts
* Added Transaction cloning

== 2.11.0

* Added SettlementBatchSummary

== 2.10.2

* Added support for international Maestro cards with payer authentication

== 2.10.1

* Support builder >= 2.0
* Changed comments to point to new doc site

== 2.10.0

* Added subscription_details to Transaction
* Added flag to store in vault only when a transaction is successful
* Added new error code

== 2.9.1

* Added a new transaction state, AuthorizationExpired.
* Enabled searching by authorization_expired_at.

== 2.8.0

* Added next_billing_date and transaction_id to subscription search
* Added address_country_name to customer search
* Added new error codes

== 2.7.0

* Added advanced vault search for customers and payment methods
* Added dynamic descriptors
* Added level 2 fields to transactions:
  * tax_amount
  * tax_exempt
  * purchase_order_number

== 2.6.3

* Allow passing of existing shipping_address_id on new transactions

== 2.6.2

* Added billing_address_id to allowed parameters for credit cards create and update
* Allow searching on subscriptions that are currently in a trial period using in_trial_period

== 2.6.1

* Now supports ruby 1.9.1 and 1.9.2

== 2.6.0

* Added ability to perform multiple partial refunds on Transactions
* Deprecated Transaction refund_id in favor of refund_ids
* Added Braintree::Address::CountryNames, a list of the country names/codes that the gateway accepts (thanks r38y[http://github.com/r38y])
* Added revert_subscription_on_proration_failure flag to Subscription update that specifies how a Subscription should react to a failed proration charge
* Deprecated Subscription next_bill_amount in favor of next_billing_period_amount
* Added new fields to Subscription:
  * balance
  * paid_through_date
  * next_billing_period_amount

== 2.5.2

* Removed ssl expiration check
* Lazy initialize Configuration.logger when directly instantiating configuration

== 2.5.1

* Lazy initialize Configuration.logger to fix bug with ssl expiration check

== 2.5.0

* Added AddOns/Discounts
* Enhanced Subscription search
* Enhanced Transaction search
* Made gateway operations threadsafe when using multiple configurations
* Allowed prorate_charges to be specified on Subscription update
* Added AddOn/Discount details to Transactions that were created from a Subscription
* Added Expired and Pending statuses to Subscription
* Added constants for CreditCardVerification statuses
* Renamed GatewayRejectionReason constants to make them more idiomatic
* Removed 13 digit Visa Sandbox Credit Card number and replaced it with a 16 digit Visa
* Added refund class method on Transaction
* Deprecated instance methods on Resource classes in favor of class methods
* Added new fields to Subscription:
  * billing_day_of_month
  * days_past_due
  * first_billing_date
  * never_expires
  * number_of_billing_cycles

== 2.4.0

* Added unified message to result objects
* Added ability to specify country using country_name, country_code_alpha2, country_code_alpha3, or country_code_numeric (see ISO_3166-1[http://en.wikipedia.org/wiki/ISO_3166-1])
* Added gateway_rejection_reason to Transaction and Verification
* Added delete as a class method on CreditCard (in addition to the existing instance method)
* Allow searching with Date objects (in addition to DateTime and Time objects)
* When creating a Subscription, return failed transaction on the ErrorResult if the initial transaction is not successful

== 2.3.1

* Fixed gem packaging

== 2.3.0

* Removed dependency on libxml -- it will still be used if libxml is explicitly required or it will fall back on rexml
* Added unified TransparentRedirect url and confirm methods and deprecated old methods
* Allow updating the payment_method_token on a subscription
* Added methods to link a Transaction with its refund and vice versa
* Allow card verification against a specified merchant account
* Added ability to update a customer, credit card, and billing address in one request

== 2.2.0

* Prevent race condition when pulling back collection results -- search results represent the state of the data at the time the query was run
* Rename ResourceCollection's approximate_size to maximum_size because items that no longer match the query will not be returned in the result set
* Correctly handle HTTP error 426 (Upgrade Required) -- the error code is returned when your client library version is no longer compatible with the gateway

== 2.1.0

* Added transaction advanced search
* Added ability to partially refund transactions
* Added ability to manually retry past-due subscriptions
* Added new transaction error codes
* Allow merchant account to be specified when creating transactions
* Allow creating a transaction with a vault customer and new payment method
* Allow existing billing address to be updated when updating credit card

== 2.0.0

* Updated success? on transaction responses to return false on declined transactions
* Search results now include Enumerable and will automatically paginate data
* Added credit_card[cardholder_name] to allowed transaction params and CreditCardDetails (thanks chrismcc[http://github.com/chrismcc])

== 1.2.1

* Added ValidationErrorCollection#shallow_errors to get all of the ValidationErrors at a given level in the error hierarchy
* Added the ability to make a credit card the default card for a customer
* Added constants for transaction statuses
* Updated Quick Start in README.rdoc to show a workflow with error checking

== 1.2.0

* Added Subscription search
* Updated production CA SSL certificate authority
* Updated credit cards to include associated subscriptions when finding in vault
* Fixed bug where we used to raise a "forged query string" exception when we were down for maintenance.

== 1.1.3

* Fixed a bug with empty search results
* Added support for appending to user agent
* Finding a customer using id as an integer will now work (even though customer ids are actually strings)

== 1.1.2

* Allow passing expiration_month and expiration_year separately
* Updated Customer.find to raise an ArgumentError if given an invalid id
* Added error code for transaction amounts that are too large
* Include Enumerable in Braintree::Errors to iterate over all validation errors
* Added processor_authorization_code attr_reader to Braintree::Transaction
* Added cvv_response_code attr_reader to Braintree::Transaction
* Added deep_errors method to Braintree::ValidationErrorCollection to get errors at every level of nesting

== 1.1.1

* Added explicit require for date to fix missing initialize (thanks jherdman[http://github.com/jherdman])
* Allow Transaction price and Subscription amount as BigDecimals (as well as Strings)
* Ruby 1.9 bug fixes (thanks Leo Shemesh)

== 1.1.0

* Recurring billing support

== 1.0.1

* Custom fields support
* Transaction status history support

== 1.0.0

* Initial release
